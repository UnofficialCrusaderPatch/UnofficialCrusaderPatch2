{
	"Description": "A description of the AI character",
	"Name": "The name of the AI character",

	"Unknown000": "Values: 0 to 2^31 -1",
	"Unknown001": "Values: 0 to 2^31 -1",
	"Unknown002": "Values: 0 to 2^31 -1",
	"Unknown003": "Values: 0 to 2^31 -1",
	"Unknown004": "Values: 0 to 2^31 -1",
	"Unknown005": "Values: 0 to 2^31 -1",
	"CriticalPopularity": "Values: 0 to 10000, Description: 10000 equals 100 popularity. Below this value, the AI sells more stuff than usual to get money.",
	"LowestPopularity": "Values: 0 to 10000, Description: Below this value the AI sets taxes in steps to TaxesMin, and rations to 'extra rations' until it reaches 'HighestPopularity' again.",
	"HighestPopularity": "Values: 0 to 10000, Description: Above this value the AI sets taxes back up until a stable 0 to -3 current popularity modifier is reached",
	"TaxesMin": "Values: 0 to 11, Description: Minimum taxes allowed. 0 to 11 beeing the steps from +7 popularity to -24 popularity by taxes in the keep.",
	"TaxesMax": "Values: 0 to 11, Description: Maximum of Taxes allowed. 0 to 11 beeing the steps from +7 popularity to -24 popularity by taxes in the keep.",
	"Unknown011": "Values: 0 to 2^31 -1",
	"Farm1": "FarmBuilding: { None, AppleFarm, WheatFarm, HopFarm, DairyFarm}",
	"Farm2": "FarmBuilding: { None, AppleFarm, WheatFarm, HopFarm, DairyFarm}",
	"Farm3": "FarmBuilding: { None, AppleFarm, WheatFarm, HopFarm, DairyFarm}",
	"Farm4": "FarmBuilding: { None, AppleFarm, WheatFarm, HopFarm, DairyFarm}",
	"Farm5": "FarmBuilding: { None, AppleFarm, WheatFarm, HopFarm, DairyFarm}",
	"Farm6": "FarmBuilding: { None, AppleFarm, WheatFarm, HopFarm, DairyFarm}",
	"Farm7": "FarmBuilding: { None, AppleFarm, WheatFarm, HopFarm, DairyFarm}",
	"Farm8": "FarmBuilding: { None, AppleFarm, WheatFarm, HopFarm, DairyFarm}",
	"PopulationPerFarm": "Values: 0 to 2^31 -1, Description: Triggers building of farms for every X amount of current available workers. Set to 0 to disable building",
	"PopulationPerWoodcutter": "Values: 0 to 2^31 -1, Description: Triggers building of woodcutters for every X amount of current available workers. Set to 0 to disable building",
	"PopulationPerQuarry": "Values: 0 to 2^31 -1, Description: Triggers building of quarries for every X amount of current available workers. Set to 0 to disable building",
	"PopulationPerIronmine": "Values: 0 to 2^31 -1, Description: Triggers building of iron mines for every X amount of current available workers. Set to 0 to disable building",
	"PopulationPerPitchrig": "Values: 0 to 2^31 -1, Description: Triggers building of pitch rigs for every X amount of current available workers. Set to 0 to disable building",
	"MaxQuarries": "Values: 1 to 2^31 -1, Description: Maximum number of quarries to place",
	"MaxIronmines": "Values: 1 to 2^31 -1, Description: Maximum number of iron mines to place",
	"MaxWoodcutters": "Values: 1 to 2^31 -1, Description: Maximum number of woodcutters to place",
	"MaxPitchrigs": "Values: 1 to 2^31 -1, Description: Maximum number of pitch rigs to place",
	"MaxFarms": "Values: 1 to 2^31 -1, Description: Maximum number of farms to place",
	"BuildInterval": "Values: 0 to 2^31 -1, Description: The gameticks between buildsteps. This is only considered <= 5000 gold",
	"ResourceRebuildDelay": "Values: 0 to 2^31 -1, Description: The delay before the AI rebuilds destroyed resource buildings.",
	"MaxFood": "Values: 0 to 2^31 -1, Description: Includes wheat. Applies to each kind of food seperatly.",
	"MinimumApples": "Values: -1 to 2^31 -1, Description: Reserves that are only consumed if current popularity < LowestPopularity. If the AI has less than this amount it will prioritize buying the missing food.",
	"MinimumCheese": "Values: -1 to 2^31 -1 ,Description: Reserves that are only consumed if current popularity < LowestPopularity. If the AI has less than this amount it will prioritize buying the missing food.",
	"MinimumBread": "Values: -1 to 2^31 -1 ,Description: Reserves that are only consumed if current popularity < LowestPopularity. If the AI has less than this amount it will prioritize buying the missing food.",
	"MinimumWheat": "Values: -1 to 2^31 -1, Description: If the AI has less than this amount, it will prioritize buying the missing wheat.",
	"MinimumHop": "Values: -1 to 2^31 -1, Description: If the AI has less than this amount, it will prioritize buying the missing hops.",
	"TradeAmountFood": "Values: 0 to 2^31 -1, Description: The amount of food, wheat or hops bought at once. Only one of these trades is made per gametick.",
	"TradeAmountEquipment": "Values: 0 to 2^31 -1, Description: The amount of equipment for the armoury bought at once. Only one of these trades is made per gametick.",
	"Unknown040": "Values: 0 to 2^31 -1",
	"MinimumGoodsRequiredAfterTrade": "Values: 0 to 2^31 -1, Description: If the AI would have less than this amount of a good after sending them, it won't send them to the requesting player.",
	"DoubleRationsFoodThreshold": "Values: 0 to 2^31 -1, Description: Above this value of food the AI will give double rations out.",
	"MaxWood": "Values: 0 to 2^31 -1",
	"MaxStone": "Values: 0 to 2^31 -1, Description: maximum amount of stone to store in the stockpile + the amount of the biggest unbuild Stonebuilding that hasn't been reached in the buildorder of the AIV.",
	"MaxResourceOther": "Values: 0 to 2^31 -1, Description: maximum amount of hops, iron, pitch and flour to store in the stockpile.",
	"MaxEquipment": "Values: 0 to 2^31 -1, Description: Maximum amount of weapons or armour stored in the armoury.",
	"MaxBeer": "Values: 0 to 2^31 -1",
	"MaxResourceVariance": "Values: 0 to 2^31 -1, Description: allowed tolerance for all goods before AI sells back to max allowed stock",
	"RecruitGoldThreshold": "Values: 0 to 2^31 -1, Description: A (gold) threshold which disables any recruitment and buying of ressources for aiv buildings or economy below it. Sortie units, ressource buildings and defensive siegeengines are excluded.",
	"BlacksmithSetting": "Swords or Maces",
	"FletcherSetting": "Bows or Crossbows",
	"PoleturnerSetting": "Spears or Pikes",
	"SellResource01": "Resource to sell down to 0",
	"SellResource02": "Resource to sell down to 0 (usually Hop)",
	"SellResource03": "Resource to sell down to 0 (usually Iron)",
	"SellResource04": "Resource to sell down to 0 (usually Pitch)",
	"SellResource05": "Resource to sell down to 0 (usually Wheat)",
	"SellResource06": "Resource to sell down to 0 (usually Beer)",
	"SellResource07": "Resource to sell down to 0 (usually Flour)",
	"SellResource08": "Resource to sell down to 0 (usually Bows)",
	"SellResource09": "Resource to sell down to 0 (usually Crossbows)",
	"SellResource10": "Resource to sell down to 0 (usually Spears)",
	"SellResource11": "Resource to sell down to 0 (usually Pikes)",
	"SellResource12": "Resource to sell down to 0 (usually Maces)",
	"SellResource13": "Resource to sell down to 0 (usually Swords)",
	"SellResource14": "Resource to sell down to 0 (usually LeatherArmors)",
	"SellResource15": "Resource to sell down to 0 (usually IronArmors)",
	"DefWallPatrolRallyTime": "Values: 0 to 2^31 -1, Description: The amount of time for castle patrols, set up in the AIV, to move from one rally point to the next. (Remark: Only spearmen, horse archers and macemen currently do)",
	"DefWallPatrolGroups": "Values: 0 to 2^31 -1, Description: The amount of concurrent existing patrol groups of, in the AIV setup castle patrols per unit type",
	"DefSiegeEngineGoldThreshold": "Values: 0 to 2^31 -1, Description: Positive values, will give the AI, if at > 0 gold, the possibility to setup defensive siegeengines for almost free (spending its entire remaining gold, cheating the missing gold if it doesnt have sufficient funds). Negative values will make the AI require to have at least the values amount of gold before spending gold on siegeengines setup in the AIV",
	"DefSiegeEngineBuildDelay": "Values: 0 to 2^31 -1, Description: The delay before the AI builds/rebuilds in the AIV placed siegeengines, after their spots are free or supporting Towers are build.",
	"Unknown072": "Values: 0 to 2^31 -1",
	"Unknown073": "Values: 0 to 2^31 -1",
	"RecruitProbDefDefault": "Values: 0 to 100, Description: All RecruitProb<Type>Default values must sum to 100. This is the probability with which this AI changes its recruitment type into defensive troops on the recruitment state change. Note: Sortie units are always recruited first! The AI starts the game always with defensive recruitment state. Until the AIV is completely built, defensive recruitment state has a higher probability by a high offset if above 0.",
	"RecruitProbDefWeak": "Values: 0 to 100, Description: All RecruitProb<Type>Weak values must sum to 100. This is the probability with which this AI changes its recruitment type into defensive troops on the recruitment state change. Note: Sortie units are always recruited first!",
	"RecruitProbDefStrong": "Values: 0 to 100, Description: All RecruitProb<Type>Strong values must sum to 100. This is the probability with which this AI changes its recruitment type into defensive troops on the recruitment state change. Note: Sortie units are always recruited first!",
	"RecruitProbRaidDefault": "Values: 0 to 100, Description: All RecruitProb<Type>Strong values must sum to 100. This is the probability with which this AI changes its recruitment type into raid troops on the recruitment state change. Note: Sortie units are always recruited first!",
	"RecruitProbRaidWeak": "Values: 0 to 100, Description: All RecruitProb<Type>Weak values must sum to 100. This is the probability with which this AI changes its recruitment type into raid troops on the recruitment state change. Note: Sortie units are always recruited first!",
	"RecruitProbRaidStrong": "Values: 0 to 100, Description: All RecruitProb<Type>Strong values must sum to 100. This is the probability with which this AI changes its recruitment type into raid troops on the recruitment state change. Note: Sortie units are always recruited first!",
	"RecruitProbAttackDefault": "Values: 0 to 100, Description: All RecruitProb<Type>Default values must sum to 100. This is the probability with which this AI changes its recruitment type into attacking troops on the recruitment state change. Note: Sortie units are always recruited first!",
	"RecruitProbAttackWeak": "Values: 0 to 100, Description: All RecruitProb<Type>Weak values must sum to 100. This is the probability with which this AI changes its recruitment type into attacking troops on the recruitment state change. Note: Sortie units are always recruited first!",
	"RecruitProbAttackStrong": "Values: 0 to 100, Description: All RecruitProb<Type>Strong values must sum to 100. This is the probability with which this AI changes its recruitment type into attacking troops on the recruitment state change. Note: Sortie units are always recruited first!",
	"SortieUnitRangedMin": "Values: 0 to 2^31 -1, Description: Ranged sortie units are only sent out from castle if at least this amount of them has already been recruited. More than the set amount can be recruited if the AI loses resource building workers frequently.",
	"SortieUnitRanged": "Type: Unit",
	"SortieUnitMeleeMin": "Values: 0 to 2^31 -1, Description: Melee sortie units are only sent out from castle if this amount of them has already been recruited.",
	"SortieUnitMelee": "Type: Unit",
	"DefDiggingUnitMax": "Values: 0 to 2^31 -1, Description: Number of units that dig own moat.",
	"DefDiggingUnit": "Type: DiggingUnit",
	"RecruitInterval": "Values: 0 to 2^31 -1",
	"RecruitIntervalWeak": "Values: 0 to 2^31 -1, Description: The 'weak' state sets in if the AI is extremely weak for example troops < 8, gold < 200, population < 15, etc",
	"RecruitIntervalStrong": "Values: 0 to 2^31 -1, Description: The 'strong' state sets in if for example the AI has troops >= 40, gold >= 200, population >= 40, etc",
	"DefTotal": "Values: 0 to 2^31 -1, Description: The total count of all defensive units (wall defense + patrols). If the AI is in its 'strong' state, it can overproduce defensive units and put them into the patrols group, if any patrols group is set.",
	"OuterPatrolGroupsCount": "Values: 0 to 2^31 -1, Description: The number of splits for outer defensive patrols.",
	"OuterPatrolGroupsMove": "true or false",
	"OuterPatrolRallyDelay": "Values: 0 to 2^31 -1, Description: The delay after which the AI sends out patrols to defend the outer economy. 4 is approximately one month, 24 being half a year.",
	"DefWalls": "Values: 0 to 2^31 -1, Description: Total number of troops for wall defense",
	"DefUnit1": "Type: Unit",
	"DefUnit2": "Type: Unit",
	"DefUnit3": "Type: Unit",
	"DefUnit4": "Type: Unit",
	"DefUnit5": "Type: Unit",
	"DefUnit6": "Type: Unit",
	"DefUnit7": "Type: Unit",
	"DefUnit8": "Type: Unit",
	"RaidUnitsBase": "Values: 0 to 2^31 -1, Description: Base amount of raid troops, Special case: [unknown trigger => end result multiplied by 1.25]",
	"RaidUnitsRandom": "Values: 0 to 2^31 -1, Description: Maximum random addition to raid troops. Special cases: [gold > 5000 => multiplied by 2][gold < 1000 => set to 0][enemy gold < 500 => divided by -2]",
	"RaidUnit1": "Type: Unit",
	"RaidUnit2": "Type: Unit",
	"RaidUnit3": "Type: Unit",
	"RaidUnit4": "Type: Unit",
	"RaidUnit5": "Type: Unit",
	"RaidUnit6": "Type: Unit",
	"RaidUnit7": "Type: Unit",
	"RaidUnit8": "Type: Unit",
	"HarassingSiegeEngine1": "Type: HarassingSiegeEngine",
	"HarassingSiegeEngine2": "Type: HarassingSiegeEngine",
	"HarassingSiegeEngine3": "Type: HarassingSiegeEngine",
	"HarassingSiegeEngine4": "Type: HarassingSiegeEngine",
	"HarassingSiegeEngine5": "Type: HarassingSiegeEngine",
	"HarassingSiegeEngine6": "Type: HarassingSiegeEngine",
	"HarassingSiegeEngine7": "Type: HarassingSiegeEngine",
	"HarassingSiegeEngine8": "Type: HarassingSiegeEngine",
	"HarassingSiegeEnginesMax": "Values: 0 to 10, Description: The maximum of harassing siege engines an AI builds. Capped at 10.",
	"Unknown124": "Values: 0 to 2^31 -1",
	"AttForceBase": "Values: 0 to 2^31 -1, Description: The base amount of troops with which this AI attacks",
	"AttForceRandom": "Values: 0 to 2^31 -1, Description: The maximum random amount of additional troops in an attack (this is not the amount by which the troops increase per attack!)",
	"AttForceSupportAllyThreshold": "Values: 0 to 2^31 -1, Description: If the AI has more than this amount of units in the attack force, it will help their allies or siege an enemy if commanded to do so.",
	"AttForceRallyPercentage": "Values: 0 to 100, Description: The %-amount of units of the attack force that the AI will rally before attacking.",
	"Unknown129": "Values: 0 to 2^31 -1",
	"Unknown130": "Values: 0 to 2^31 -1",
	"AttUnitPatrolRecommandDelay": "Values: 0 to 2^31 -1, Description: Supposedly the gameticks, until the Attackunit patrol get ordered a new command for patroling around the enemy's keep",
	"Unknown132": "Values: 0 to 2^31 -1",
	"SiegeEngine1": "Type: SiegeEngine",
	"SiegeEngine2": "Type: SiegeEngine",
	"SiegeEngine3": "Type: SiegeEngine",
	"SiegeEngine4": "Type: SiegeEngine",
	"SiegeEngine5": "Type: SiegeEngine",
	"SiegeEngine6": "Type: SiegeEngine",
	"SiegeEngine7": "Type: SiegeEngine",
	"SiegeEngine8": "Type: SiegeEngine",
	"CowThrowInterval": "Values: 0 to 2^31 -1, Description: The amount of stones needed to be thrown until the AI throws a diseased cow instead (catapults & trebuchets). Value 0 disables cows and -1 makes the AI not throw any bolders, only cows.",
	"Unknown142": "Values: 0 to 2^31 -1",
	"AttMaxEngineers": "Values: 0 to 2^31 -1",
	"AttDiggingUnit": "Type: DiggingUnit",
	"AttDiggingUnitMax": "Values: 0 to 2^31 -1",
	"AttUnit2": "Type: Unit",
	"AttUnit2Max": "Values: 0 to 2^31 -1",
	"AttMaxAssassins": "Values: 0 to 2^31 -1",
	"AttMaxLaddermen": "Values: 0 to 2^31 -1",
	"AttMaxTunnelers": "Values: 0 to 2^31 -1",
	"AttUnitPatrol": "Type: Unit",
	"AttUnitPatrolMax": "Values: 0 to 2^31 -1",
	"AttUnitPatrolGroupsCount": "Values: 0 to 2^31 -1, Description: # of groups the AttUnitPatrol split into. BUGGY! More than 1 group results to only a single group attacking, the others standing idle.",
	"AttUnitBackup": "Type: Unit",
	"AttUnitBackupMax": "Values: 0 to 2^31 -1",
	"AttUnitBackupGroupsCount": "Values: 0 to 2^31 -1, Description: # of groups the RangedBackupUnits split into. If shields are present in the army, one will be added to each group (if possible).",
	"AttUnitEngage": "Type: Unit",
	"AttUnitEngageMax": "Values: 0 to 2^31 -1",
	"AttUnitSiegeDef": "Type: Unit",
	"AttUnitSiegeDefMax": "Values: 0 to 2^31 -1",
	"AttUnitSiegeDefGroupsCount": "Values: 0 to 2^31 -1, Description: This may or may not be the number of groups the AttUnitSiegeDef split into",
	"AttUnitMain1": "Type: Unit",
	"AttUnitMain2": "Type: Unit",
	"AttUnitMain3": "Type: Unit",
	"AttUnitMain4": "Type: Unit",
	"AttMaxDefault": "Values: 0 to 2^31 -1",
	"AttMainGroupsCount": "Values: 0 to 3, Description: # of groups that the AttUnitMain split into. Maximum is 3",
	"TargetChoice": "TargetingType: { Gold, Balanced, Any, Closest, Player }"
}
	